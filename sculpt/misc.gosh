
### WRITE HEADER OF TEX FILE ###
proc produce_head_latex {} {
	global title authors

	printline {\documentclass[a4paper,normalheadings]{scrartcl}}
	printline {\usepackage[T1]{fontenc}}
	printline {\linespread{1.05} % avoid foot-note markers to mess up the line spacing}
	printline {\usepackage[norule,perpage]{footmisc}}
	printline {\usepackage{lmodern}}
	printline {\usepackage{ucs}}
	printline {\usepackage[utf8x]{inputenc}}
	printline {\usepackage[english]{babel}}
	printline {\usepackage[small,bf,hang]{caption}}
	printline {\usepackage{epsfig}}
	printline {\emergencystretch = 10pt}
	printline {\clubpenalty = 10000}
	printline {\widowpenalty = 10000}
	printline {\displaywidowpenalty = 10000}
	printline {\usepackage{fancyhdr}}
	printline {\usepackage{palatino}}
	printline {\usepackage{helvet}}
	printline {\usepackage{courier}}
	printline {\usepackage{amsmath}}
	printline {\usepackage{amssymb}}
	printline {\usepackage{graphicx}}
	printline {\usepackage{color}}
	printline {\usepackage[scaled]{beramono}}
	printline {\usepackage{tikz}}
	printline {\usepackage{listings}}
	printline {\lstset{basicstyle=\ttfamily}}
	printline "\\usepackage\[pdftex,pdfauthor={$authors},pdftitle={$title},pagebackref=true,colorlinks=true,linkcolor=darkblue,citecolor=darkblue,urlcolor=darkblue\]{hyperref}"
	printline {\urlstyle{same}}
	printline {\begin{document}}
	printline {\definecolor{lightgray}{gray}{0.5}}
	printline {\definecolor{darkblue}{rgb}{0.1,0,0.55}}

	if {$title != ""} {
		printline "\\title{[out_latex $title]}"
		if {$authors != ""} {
			printline "\\author{[out_latex $authors]}"
		}
		printline {\maketitle}
	}
	printline {\pagestyle{fancy}}
	printline {\fancyhf{}}
	printline {\fancyhead[RE]{\slshape \uppercase{\leftmark}}}
	printline {\fancyhead[LO]{\slshape \uppercase{\rightmark}}}
	printline {\fancyfoot[C]{\thepage \\ \vspace{1cm} \epsfig{file=../img/genode_labs,angle=0,height=0.5cm}}}
	printline {\renewcommand{\footrulewidth}{0pt}}
	printline {\tableofcontents}

	printline {\vfill \epsfig{file=../img/by-sa,angle=0,width=0.2\textwidth} \hspace{0.3cm}}
	printline {\begin{minipage}[b]{0.8\textwidth} \raggedright \small}
	printline {This work is licensed under the Creative Commons Attribution + ShareAlike}
	printline {License (CC-BY-SA). To view a copy of the license, visit}
	printline {http://creativecommons.org/licenses/by-sa/4.0/legalcode}
	printline {\end{minipage}}

	printline {\clearpage}
}


### WRITE TAIL OF TEX FILE ###
proc produce_tail_latex {} {
	printline "\\end{document}"
}


### CHAPTER ###
proc process_chapter_latex {txtblock} {
	global curr_chapter references
	global chapter_tag;
	set title [linetxt [lindex $txtblock 0]]
	set curr_chapter $references($title,index)
	printline ""
	printline "%     -+*|\[ [string toupper $title] \]|*+-\n"
	printline "\\clearpage"
	printline "\\$chapter_tag[section_env_latex $title]"
	handle_txtblock chapter [lrange $txtblock 2 end]
}

### VERBATIM  ###
proc process_verbatim_latex {txtblock} {
	while {[lindex $txtblock end] == ""} {
		set txtblock [lrange $txtblock 0 [expr [llength $txtblock]-2]]
	}

	#
	# For the output of verbatim text, we use 'puts' rather than
	# 'printline' because 'printline' would indent the text, which
	# is not desired within a verbatim environment.
	#
	printline "\\begin{flushleft}"
	printline "\\begin{tikzpicture}"
	printline "\\node\[font=\\small] (verbatim) {"
	printline {\begin{lstlisting}[resetmargins=true]}
	foreach txtline $txtblock {
		set txt [linetxt $txtline]
		regsub     {^\!} $txt ""   txt
		regsub -all {\t} $txt "  " txt
		puts "$txt"
	}
	printline "\\end{lstlisting}"
	printline "};"
	printline "\\path\[very thick, draw=black!5\] (verbatim.north west) -- (verbatim.south west);"
	printline "\\end{tikzpicture}"
	printline "\\end{flushleft}"
}


### IMAGE ###
proc process_image_latex {txtblock} {
	set img_info ""
	set img_size 80
	set img_angle "0"
	set img_star ""
	set img_relw "columnwidth"
	regexp {\[(image \w+.*)\]} [lindex $txtblock 0] dummy img_info
	if {$img_info == ""} return
	set img_name [lindex $img_info 1]
	regexp { (\d+)%} $img_info dummy img_size
	regexp { (\d+)Â°} $img_info dummy img_angle
	if {[regexp {full-span} $img_info dummy]} {
		set img_star "*"
		set img_relw "textwidth"
	}

	set img_cap ""
	foreach img_capline $txtblock {
		set txt [linetxt $img_capline]
		regsub {^\[.*\]} $txt "" txt
		regsub {^ *}     $txt "" txt
		append img_cap $txt " "
	}
	regsub { *$} $img_cap "" img_cap

	printline ""
	printline "\\begin{center}"
	printline "  \\epsfig{file=$img_name,angle=$img_angle,width=[expr $img_size.0/100]\\$img_relw}"
	printline "  \\label{[label_latex $img_name]}"
	printline " \\end{center}\n"
}
