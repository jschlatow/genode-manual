set chapter_tag    "chapter"
set section_tag    "section"
set subsection_tag "subsection"

### WRITE HEADER OF TEX FILE ###
proc produce_head_latex {} {
	global title authors

	set paper_trim 3
	set paper_width  [expr 148+$paper_trim*2]
	set paper_height [expr 210+$paper_trim*2]
	set hmargin      [expr 13+$paper_trim]
	set vmargin      [expr 10+$paper_trim]

	printline {\documentclass[a5paper,twoside,9pt,normalheadings]{scrbook}}
	printline {\KOMAoptions{cleardoublepage=empty}}
	printline {\usepackage[T1]{fontenc}}
	printline {\linespread{1.05} % avoid foot-note markers to mess up the line spacing}
	printline {\usepackage[norule,perpage]{footmisc}}
	printline {\usepackage{lmodern}}
	printline {\usepackage[english]{babel}}
	printline {\usepackage[small,bf,hang]{caption}}
	printline {\usepackage{epsfig}}
	printline {\emergencystretch = 10pt}
	printline {\clubpenalty = 10000}
	printline {\widowpenalty = 300}
	printline {\displaywidowpenalty = 10000}
	printline {\usepackage{fancyhdr}}
	printline {\usepackage{palatino}}
	printline {\usepackage{helvet}}
	printline {\usepackage{courier}}
	printline {\usepackage{amsmath}}
	printline {\usepackage{amssymb}}
	printline {\usepackage{graphicx}}
	printline {\usepackage[cmyk]{xcolor}}
	printline "\\usepackage\[paperwidth=${paper_width}mm,paperheight=${paper_height}mm,hmargin=${hmargin}mm,vmargin=${vmargin}mm,includefoot,includehead,head=0.5cm,headsep=0.5cm,foot=0.3cm,twoside,bindingoffset=0.9cm\]{geometry}"
	printline {\usepackage[scaled]{beramono}}
	printline "\\usepackage\[pdftex,pdfauthor={$authors},pdftitle={$title},pagebackref=true,colorlinks=false\]{hyperref}"
	printline {\usepackage{enumitem} % for colored items as used in spec }
	printline {\setlist[description]{leftmargin=0.5cm,labelindent=0cm}}
	printline {\usepackage{tabularx} % for tables with paragraphs as used in spec }
	printline {\input{img/tikz-preamble.tex}}
	printline {\urlstyle{same}}
	printline {\usepackage{microtype} % make justification nicer}
	printline {\setlength{\parindent}{0pt}}
	printline {\setlength{\parskip}{6pt plus 2pt minus 1pt}}
	printline {\lstset{resetmargins=true,basicstyle=\fontsize{7.6pt}{8.5pt}\ttfamily}}
	printline {\usepackage{xurl} % automatic line breaks within urls}
	printline {\usepackage[htt]{hyphenat} % line breaks within texttt}
	printline {\raggedbottom % do not stretch pages vertically}

	printline {\begin{document}}

	printline {\input{img/tikz-common.tex}}

	printline {\definecolor{lightgray}{gray}{0.5}}
	printline {\definecolor{darkblue}{rgb}{0.1,0,0.55}}

	printline "\\title{[out_latex $title]}"
	printline "\\author{[out_latex $authors]}"

	printline "\\fancypagestyle{fancy}{"
	printline {\fancyhf{}}
	printline {\fancyhead[RE]{\slshape   \uppercase{\leftmark}}}
	printline {\fancyhead[LO]{\slshape \nouppercase{\rightmark}}}
	printline {\fancyhead[LE,RO]{\textbf{\thepage}}}
	printline {\renewcommand{\footrulewidth}{0pt}}
	printline "}"
	printline "\\fancypagestyle{plain}{"
	printline {\fancyhf{}}
	printline {\fancyfoot[C]{\vfill\textbf{--~\thepage~--}}}
	printline {\renewcommand{\headrulewidth}{0pt}}
	printline {\renewcommand{\footrulewidth}{0pt}}
	printline "}"
	printline {\pagestyle{fancy}}
	printline {\tableofcontents}
}


### WRITE TAIL OF TEX FILE ###
proc produce_tail_latex {} {
	printline "\\end{document}"
}


### CHAPTER ###
proc process_chapter_latex {txtblock} {
	global curr_chapter references
	global chapter_tag
	set title [linetxt [lindex $txtblock 0]]
	set curr_chapter $references($title,index)
	printline ""
	printline "%     -+*|\[ [string toupper $title] \]|*+-\n"
	printline "\\clearpage"
	printline "\\$chapter_tag[section_env_latex $title]"
	handle_txtblock chapter [lrange $txtblock 2 end]
}


### SECTION ###
proc process_section_latex {txtblock} {
	set title [linetxt [lindex $txtblock 0]]
	global section_tag
	printline ""
	printline "%     -+*|\[ [string toupper $title] \]|*+-\n"
	printline "\\clearpage"
	printline "\\$section_tag[section_env_latex $title]"
	handle_txtblock section [lrange $txtblock 2 end]
}


### ANNOTATION ###
proc process_annotation_latex {txtblock} {
	set new_txtblock {}
	foreach txtline $txtblock {
		set txtline [lineregsub {^\| ?} $txtline ""]
		lappend new_txtblock $txtline
	}
	printline "\\vspace{0.2cm}{\\setlength{\\parindent}{0cm} \\colorbox\[gray\]{0.9}{\\parbox{10cm}{ \\color{lightgray} \\footnotesize \\it"
	handle_txtblock annotation $new_txtblock
	printline "}}}\\vspace{0.2cm}"
}


### TIKZ IMAGE ###
proc process_tikz_latex {txtblock} {
	set tikz_size 101
	set tikz_relw "columnwidth"

	regexp {\[(tikz \w+.*)\]} [lindex $txtblock 0] dummy tikz_info
	if {$tikz_info == ""} return
	set tikz_name [lindex $tikz_info 1]

	regexp { (\d+)%} $tikz_info dummy tikz_size
	if {[regexp {full-span} $tikz_info dummy]} {
		set tikz_relw "textwidth"
	}

	set resizebox ""
	if {$tikz_size <= 100} {
		set resizebox "\\resizebox{[expr $tikz_size.0/100]\\$tikz_relw}{!}"
	}

	set tikz_cap ""
	foreach tikz_capline $txtblock {
		set txt [linetxt $tikz_capline]
		regsub {^\[.*\]} $txt "" txt
		regsub {^ *}     $txt "" txt
		append tikz_cap $txt " "
	}
	regsub { *$} $tikz_cap "" tikz_cap

	#
	# If no caption is provided, we insert the tikz image as is. If a caption
	# is provided, we host the tikz image in a figure environment.
	#
	if {$tikz_cap == ""} {
		printline "\\begin{center}"
		printline " $resizebox{\\input{$tikz_name.tikz}}"
		printline "\\end{center}"
	} else {
		printline ""
		printline " \\begin{figure}\[tbp\]"
		printline "  \\begin{center}"
		printline "   $resizebox{\\input{$tikz_name.tikz}}"
		printline "   \\caption{[out_latex $tikz_cap]}"
		printline "   \\label{[label_latex $tikz_name]}"
		printline "  \\end{center}"
		printline " \\end{figure}"
	}
}

### VERBATIM  ###
proc process_verbatim_latex {txtblock} {
	while {[lindex $txtblock end] == ""} {
		set txtblock [lrange $txtblock 0 [expr [llength $txtblock]-2]]
	}

	#
	# For the output of verbatim text, we use 'puts' rather than
	# 'printline' because 'printline' would indent the text, which
	# is not desired within a verbatim environment.
	#
	printline "\\begin{flushleft}"
	printline "\\begin{tikzpicture}"
	printline "\\node (verbatim) {"
	printline "\\begin{lstlisting}"
	foreach txtline $txtblock {
		set txt [linetxt $txtline]
		regsub     {^\!} $txt ""   txt
		regsub -all {\t} $txt "  " txt
		puts "$txt"
	}
	printline "\\end{lstlisting}"
	printline "};"
	printline "\\path\[very thick, draw=black!5\] (verbatim.north west) -- (verbatim.south west);"
	printline "\\end{tikzpicture}"
	printline "\\end{flushleft}"
}
